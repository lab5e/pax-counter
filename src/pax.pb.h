/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.1 */

#ifndef PB_APIPB_PAX_PB_H_INCLUDED
#define PB_APIPB_PAX_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _apipb_PAXMessage {
    uint32_t bluetooth_device_count;
    uint32_t wifi_device_count;
} apipb_PAXMessage;


/* Initializer values for message structs */
#define apipb_PAXMessage_init_default            {0, 0}
#define apipb_PAXMessage_init_zero               {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define apipb_PAXMessage_bluetooth_device_count_tag 1
#define apipb_PAXMessage_wifi_device_count_tag   2

/* Struct field encoding specification for nanopb */
#define apipb_PAXMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   bluetooth_device_count,   1) \
X(a, STATIC,   SINGULAR, UINT32,   wifi_device_count,   2)
#define apipb_PAXMessage_CALLBACK NULL
#define apipb_PAXMessage_DEFAULT NULL

extern const pb_msgdesc_t apipb_PAXMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define apipb_PAXMessage_fields &apipb_PAXMessage_msg

/* Maximum encoded size of messages (where known) */
#define apipb_PAXMessage_size                    12

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
